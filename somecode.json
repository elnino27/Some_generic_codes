{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "addressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
          "description": "Address prefix for the Virtual Network"
        }
      },
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/28",
        "metadata": {
          "description": "Subnet prefix"
        }
      },
      
      "applicationGatewaySize": {
        "type": "string",
        "allowedValues": [
          "Standard_Small",
          "Standard_Medium",
          "Standard_Large"
        ],
        "defaultValue": "Standard_Medium",
        "metadata": {
          "description": "application gateway size"
        }
      },
      "capacity": {
        "type": "int",
        "allowedValues": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "defaultValue": 2,
        "metadata": {
          "description": "Number of instances"
        }
      },
      
      
      "probeEnabled": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Probe Enabled"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "webAppName": {
        "type": "string",
        "metadata": {
          "description": "Base name of the resource such as web app name and app service plan"
        },
        "minLength": 2
      },
      "sku":{
        "type": "string",
        "defaultValue" : "S1",
        "metadata": {
          "description": "The SKU of App Service Plan, by default is Standard S1"
        }
      },
      "accountType": {
        "type": "string"
    },
    "kind": {
        "type": "string"
    },
    "accessTier": {
        "type": "string"
    },
    "supportsHttpsTrafficOnly": {
        "type": "bool"
    },
    "isHnsEnabled": {
        "type": "bool"
    },
    "builtInRoleType": {
        "type": "string",
        "allowedValues": [
          "Owner",
          "Contributor",
          "Reader"
        ],
        "metadata": {
          "description": "Built-in role to assign"
        }
      },

      "roleNameGuid": {
        "type": "string",
        "metadata": {
          "description": "A new GUID used to identify the role assignment"
        }
      },

      "azureWebapp1": {
        "type": "string",
        "metadata": {
          "description": "URL of Azure Web App 1"
        }
         
      }

    },
   


    "variables": {
      "applicationGatewayName": "applicationGateway1",
      "publicIPAddressName": "publicIp1",
      "virtualNetworkName": "virtualNetwork1",
      "subnetName": "appGatewaySubnet",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
      "webAppPortalName": "[concat(parameters('webAppName'), '-webapp')]",
    "appServicePlanName": "[concat('AppServicePlan-', parameters('webAppName'))]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'webstor')]",
    "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
    },
    "resources": [
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/serverfarms",
            "kind": "app",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": [],
            "sku": {
              "name": "[parameters('sku')]"
            }
          },
          {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[variables('webAppPortalName')]",
            "location": "[parameters('location')]",
            "properties": {
              "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],

            "identity": {
                
                "type": "SystemAssigned"
            }
          },

        
      {
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-06-01",
        "name": "[variables('applicationGatewayName')]",
        "type": "Microsoft.Network/applicationGateways",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "sku": {
            "name": "[parameters('applicationGatewaySize')]",
            "tier": "Standard",
            "capacity": "[parameters('capacity')]"
          },
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ],
          "frontendIPConfigurations": [
            {
              "name": "appGatewayFrontendIP",
              "properties": {
                "PublicIPAddress": {
                  "id": "[variables('publicIPRef')]"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "appGatewayFrontendPort",
              "properties": {
                "Port": 80
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "appGatewayBackendPool",
              "properties": {
                "BackendAddresses": [
                  {
                    "IpAddress": "[parameters('azureWebApp1')]"
                  }
                 
                ]
              }
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "appGatewayBackendHttpSettings",
              "properties": {
                "Port": 80,
                "Protocol": "Http",
                "CookieBasedAffinity": "Disabled",
                "PickHostNameFromBackendAddress": true,
                "ProbeEnabled": "[parameters('probeEnabled')]",
                "Probe": {
                  "id": "[concat(variables('applicationGatewayID'), '/probes/Probe1')]"
                }
              }
            }
          ],
          "httpListeners": [
            {
              "name": "appGatewayHttpListener",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                },
                "FrontendPort": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                },
                "Protocol": "Http",
                "SslCertificate": null
              }
            }
          ],
          "requestRoutingRules": [
            {
              "Name": "rule1",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                },
                "backendAddressPool": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                },
                "backendHttpSettings": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                }
              }
            }
          ],
          "probes": [
            {
              "Name": "Probe1",
              "properties": {
                "Protocol": "Http",
                "Path": "/",
                "Interval": 30,
                "Timeout": 10,
                "UnhealthyThreshold": 3,
                "MinServers": 0,
                "PickHostNameFromBackendHttpSettings": true
              }
            }
          ]
        }
      },
          
      {
        "name": "[variables('storageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2018-07-01",
        "location": "[parameters('location')]",
        "properties": {
            "accessTier": "[parameters('accessTier')]",
            "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
            "isHnsEnabled": "[parameters('isHnsEnabled')]"
        },
        "dependsOn": [],
        "sku": {
            "name": "[parameters('accountType')]"
        },
        "kind": "[parameters('kind')]",
        "tags": {
            "storage": "adls2"
        }
    },
    {
       "type": "Microsoft.KeyVault/vaults",
       "apiVersion": "2016-10-01",
       "name": "vaultkey12345678",
       "location": "[resourceGroup().location]",
       "tags": {
            "displayName": "vaultkey12345678"
       },
       "properties": {
            "enabledForDeployment": true,
            "enabledForTemplateDeployment": true,
            "enabledForDiskEncryption": true,
            "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('webAppPortalName')), '2015-05-01', 'Full').identity.tenantId]",
            "accessPolicies": [
                {
                    "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('webAppPortalName')), '2015-05-01', 'Full').identity.tenantId]",
                    "objectId": "[reference(concat('Microsoft.Web/sites/', variables('webAppPortalName')), '2015-05-01', 'Full').identity.principalId]",
                    "permissions": {
                       "keys": ["get"],
                       "secrets": ["get","set","list"],
                       "certificates": ["create","import","get","list"]
                   }
                }
            ],
            "sku": {
                "name": "standard",
                "family": "A"
            }
        },
        "resources": [
          {
            "type": "secrets",
            "name": "KeyvaultSecret1",
            "apiVersion": "2016-10-01",
            "properties": {
               "value": "KeyvaultSecretValue1"
             },
            "dependsOn": [
               "[concat('Microsoft.KeyVault/vaults/', 'vaultkey12345678')]"
             ]
          }]
    },

    {
        "apiVersion": "2014-10-01-preview",
        "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', parameters('roleNameGuid'))]",
        "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
        
        "properties": {
            "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
            "principalId": "[reference(concat('Microsoft.Web/sites/', variables('webAppPortalName')), '2015-05-01', 'Full').identity.principalId]"
        }
      }


      

    ]
  }